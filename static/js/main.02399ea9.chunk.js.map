{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","index.js"],"names":["Navbar","props","bgColor","bgColor2","mode","modeColors","dark1","blue1","green1","red1","light1","dark2","blue2","green2","red2","className","style","backgroundColor","to","title","type","id","fontWeight","aboutText","onClick","toggleMode","role","htmlFor","background","color","blueMode","greenMode","redMode","TextForm","useState","text","setText","wordCount","split","filter","element","length","heading","value","onChange","event","target","rows","newtext","toUpperCase","showAlert","toLowerCase","map","arr","charAt","slice","join","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","About","border","borderRadius","marginBottom","Alert","height","alert1","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","exact","path","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.02399ea9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  var bgColor;\r\n  switch (props.mode) {\r\n    case \"dark\":\r\n      bgColor = props.modeColors.dark1;\r\n      break;\r\n    case \"blue\":\r\n      bgColor = props.modeColors.blue1;\r\n      break;\r\n    case \"green\":\r\n      bgColor = props.modeColors.green1;\r\n      break;\r\n    case \"red\":\r\n      bgColor = props.modeColors.red1;\r\n      break;\r\n    default:\r\n      bgColor = props.modeColors.light1;\r\n      break;\r\n  }\r\n\r\n  var bgColor2;\r\n  switch (props.mode) {\r\n    case \"dark\":\r\n      bgColor2 = props.modeColors.dark2;\r\n      break;\r\n    case \"blue\":\r\n      bgColor2 = props.modeColors.blue2;\r\n      break;\r\n    case \"green\":\r\n      bgColor2 = props.modeColors.green2;\r\n      break;\r\n    case \"red\":\r\n      bgColor2 = props.modeColors.red2;\r\n      break;\r\n    default:\r\n      bgColor2 = \"white\";\r\n      break;\r\n  }\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${\r\n        props.mode === \"light\" ? \"light\" : \"dark\"\r\n      }`}\r\n      style={{ backgroundColor: bgColor }}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/csb-mh8tcp/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                className=\"nav-link\"\r\n                aria-current=\"page\"\r\n                to=\"/csb-mh8tcp/\"\r\n                style={{ fontWeight: \"bolder\" }}\r\n              >\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                className=\"nav-link\"\r\n                to=\"/csb-mh8tcp/about\"\r\n                style={{ fontWeight: \"bolder\" }}\r\n              >\r\n                {props.aboutText}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {/*<form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form>*/}\r\n        </div>\r\n        <div className=\"form-check form-switch mx-3\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            onClick={props.toggleMode}\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            id=\"flexSwitchCheckDefault\"\r\n          />\r\n          <label\r\n            className={`form-check-label text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n            htmlFor=\"flexSwitchCheckDefault\"\r\n          >\r\n            Enable {props.mode === \"light\" ? \"Dark\" : \"Light\"} Mode\r\n          </label>\r\n        </div>\r\n        <div className=\"dropdown my-2\">\r\n          <div\r\n            className=\"btn btn-secondary dropdown-toggle\"\r\n            role=\"button\"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n            style={{\r\n              background:\r\n                \"linear-gradient(to right, rgb(255, 172, 0), rgb(29, 255, 224), rgb(108, 0, 222))\",\r\n              color: \"black\"\r\n            }}\r\n          >\r\n            <strong>More Color Themes</strong>\r\n          </div>\r\n\r\n          <ul className=\"dropdown-menu\" style={{ backgroundColor: bgColor2 }}>\r\n            <li>\r\n              <div className=\"form-check form-switch mx-3\">\r\n                <input\r\n                  style={{ backgroundColor: \"blue\" }}\r\n                  className=\"form-check-input\"\r\n                  onClick={props.blueMode}\r\n                  type=\"checkbox\"\r\n                  role=\"switch\"\r\n                  id=\"flexSwitchCheckDefault\"\r\n                />\r\n                <label\r\n                  className={`form-check-label text-${\r\n                    props.mode === \"light\" ? \"dark\" : \"light\"\r\n                  }`}\r\n                  htmlFor=\"flexSwitchCheckDefault\"\r\n                >\r\n                  Blue Mode\r\n                </label>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"form-check form-switch mx-3\">\r\n                <input\r\n                  style={{ backgroundColor: \"green\" }}\r\n                  className=\"form-check-input\"\r\n                  onClick={props.greenMode}\r\n                  type=\"checkbox\"\r\n                  role=\"switch\"\r\n                  id=\"flexSwitchCheckDefault\"\r\n                />\r\n                <label\r\n                  className={`form-check-label text-${\r\n                    props.mode === \"light\" ? \"dark\" : \"light\"\r\n                  }`}\r\n                  htmlFor=\"flexSwitchCheckDefault\"\r\n                >\r\n                  Green Mode\r\n                </label>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"form-check form-switch mx-3\">\r\n                <input\r\n                  style={{ backgroundColor: \"red\" }}\r\n                  className=\"form-check-input\"\r\n                  onClick={props.redMode}\r\n                  type=\"checkbox\"\r\n                  role=\"switch\"\r\n                  id=\"flexSwitchCheckDefault\"\r\n                />\r\n                <label\r\n                  className={`form-check-label text-${\r\n                    props.mode === \"light\" ? \"dark\" : \"light\"\r\n                  }`}\r\n                  htmlFor=\"flexSwitchCheckDefault\"\r\n                >\r\n                  Red Mode\r\n                </label>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set your title here\",\r\n  aboutText: \"Set aboutText here\"\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const HandleUpClick = () => {\r\n    //console.log(\"Uppercase was clicked\");\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Convert to Uppercase has been Enabled\", \"success\");\r\n  };\r\n\r\n  const HandleDownClick = () => {\r\n    //console.log(\"Uppercase was clicked\");\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Convert to Lowercase has been Enabled\", \"success\");\r\n  };\r\n\r\n  const HandleCapClick = () => {\r\n    //console.log(\"Uppercase was clicked\");\r\n    let newtext = text\r\n      .toLowerCase()\r\n      .split(\" \")\r\n      .map((arr) => arr.charAt(0).toUpperCase() + arr.slice(1))\r\n      .join(\" \");\r\n    setText(newtext);\r\n    props.showAlert(\"Capitalize has been Enabled\", \"success\");\r\n  };\r\n\r\n  const speak = () => {\r\n    let msg = new SpeechSynthesisUtterance();\r\n    msg.text = text;\r\n    window.speechSynthesis.speak(msg);\r\n    props.showAlert(\"Speak has been Enabled\", \"success\");\r\n  };\r\n\r\n  const HandleOnChange = (event) => {\r\n    //console.log(\"On Change\")\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  var bgColor;\r\n  switch (props.mode) {\r\n    case \"dark\":\r\n      bgColor = props.modeColors.dark2;\r\n      break;\r\n    case \"blue\":\r\n      bgColor = props.modeColors.blue2;\r\n      break;\r\n    case \"green\":\r\n      bgColor = props.modeColors.green2;\r\n      break;\r\n    case \"red\":\r\n      bgColor = props.modeColors.red2;\r\n      break;\r\n    default:\r\n      bgColor = \"white\";\r\n      break;\r\n  }\r\n\r\n  var wordCount = text.split(\" \").filter((element) => element.length !== 0)\r\n    .length;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-3\">\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            id=\"myBox\"\r\n            onChange={HandleOnChange}\r\n            style={{\r\n              backgroundColor: bgColor,\r\n              color: props.mode === \"light\" ? \"black\" : \"white\"\r\n            }}\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1 my-1\" onClick={HandleUpClick}>\r\n          Convert to Upper Case\r\n        </button>\r\n        <button className=\"btn btn-success mx-1 my-1\" onClick={HandleDownClick}>\r\n          Convert to Lower Case\r\n        </button>\r\n        <button className=\"btn btn-dark mx-1 my-1\" onClick={HandleCapClick}>\r\n          Capitalize\r\n        </button>\r\n        <button className=\"btn btn-warning mx-1 my-1\" onClick={speak}>\r\n          Speak\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"container my-3\">\r\n        <h1>Your Text Summary</h1>\r\n        <p>\r\n          {wordCount} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * wordCount} Minutes Read</p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {wordCount === 0\r\n            ? \"Enter something in the above Textbox to preview it here\"\r\n            : text}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  var bgColor2;\r\n  switch (props.mode) {\r\n    case \"dark\":\r\n      bgColor2 = props.modeColors.dark2;\r\n      break;\r\n    case \"blue\":\r\n      bgColor2 = props.modeColors.blue2;\r\n      break;\r\n    case \"green\":\r\n      bgColor2 = props.modeColors.green2;\r\n      break;\r\n    case \"red\":\r\n      bgColor2 = props.modeColors.red2;\r\n      break;\r\n    default:\r\n      bgColor2 = \"white\";\r\n      break;\r\n  }\r\n  return (\r\n    <div\r\n      className=\"container my-3\"\r\n      style={{\r\n        border: `1px solid ${bgColor2 !== \"white\" ? \"white\" : \"black\"}`,\r\n        borderRadius: \"5px\"\r\n      }}\r\n    >\r\n      <h1 className=\"my-2\">About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div\r\n          className=\"accordion-item\"\r\n          style={{\r\n            backgroundColor: bgColor2,\r\n            color: `${bgColor2 !== \"white\" ? \"white\" : \"black\"}`\r\n          }}\r\n        >\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              style={{\r\n                backgroundColor: bgColor2,\r\n                color: `${bgColor2 !== \"white\" ? \"white\" : \"black\"}`\r\n              }}\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              Analyze your text\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              Textutils gives you a way to analyze your text quickly and\r\n              efficietly. Be it word count, character count or ideal reading\r\n              time required.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"accordion-item\"\r\n          style={{\r\n            backgroundColor: bgColor2,\r\n            color: `${bgColor2 !== \"white\" ? \"white\" : \"black\"}`\r\n          }}\r\n        >\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              style={{\r\n                backgroundColor: bgColor2,\r\n                color: `${bgColor2 !== \"white\" ? \"white\" : \"black\"}`\r\n              }}\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n              Free to use\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              TextUtils is a free character counter tool that provides instant\r\n              character count& word count statistics for a given text. TextUtils\r\n              reports the number of words and characters. thus it is suitable\r\n              for writing text with word/character limit.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"accordion-item\"\r\n          style={{\r\n            backgroundColor: bgColor2,\r\n            color: `${bgColor2 !== \"white\" ? \"white\" : \"black\"}`,\r\n            marginBottom: \"10px\"\r\n          }}\r\n        >\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              style={{\r\n                backgroundColor: bgColor2,\r\n                color: `${bgColor2 !== \"white\" ? \"white\" : \"black\"}`\r\n              }}\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              Browser Compatible\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              This word counter software works in any web browsers such as\r\n              Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to\r\n              count characters in facebook, blog, books, excel document, pdf\r\n              document, essays, etc.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const Capitalize = (text) => {\r\n    return text\r\n      .toLowerCase()\r\n      .split(\" \")\r\n      .map((arr) => arr.charAt(0).toUpperCase() + arr.slice(1))\r\n      .join(\" \");\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert1 && (\r\n        <div>\r\n          <div\r\n            className={`alert alert-${props.alert1.type} alert-dismissible fade show`}\r\n            style={{\r\n              backgroundColor:\r\n                props.mode === \"light\" ? null : \"rgb(255, 255, 255, 0.3)\",\r\n              color: props.mode === \"light\" ? null : \"black\"\r\n            }}\r\n            role=\"alert\"\r\n          >\r\n            <strong>{Capitalize(props.alert1.type)} : </strong>\r\n            {props.alert1.msg}\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              data-bs-dismiss=\"alert\"\r\n              aria-label=\"Close\"\r\n            ></button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert1, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({ msg: message, type: type });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const modeColors = {\n    dark1: \"#212529\",\n    dark2: \"#343a40\",\n    light1: \"#f8f9fa\",\n    blue1: \"#22245b\",\n    blue2: \"#383c98\",\n    green1: \"#315b22\",\n    green2: \"#2b7a0f\",\n    red1: \"#5d2121\",\n    red2: \"#8f3434\"\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.background = \"#343a40\";\n      document.body.style.color = \"white\";\n      showAlert(\"Dark Mode has been Enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode Enabled\";\n      /*setInterval(() => {document.title = \"Text Utils is Amazing\";}, 500); setInterval(() => {document.title = \"Install Text Utils Now\";}, 1000);*/\n    } else {\n      setMode(\"light\");\n      document.body.style.background = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light Mode has been Enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode Enabled\";\n    }\n  };\n\n  const bluetoggleMode = () => {\n    if (mode !== \"blue\") {\n      setMode(\"blue\");\n      document.body.style.background = modeColors.blue2;\n      document.body.style.color = \"white\";\n      showAlert(\"Blue Mode has been Enabled\", \"success\");\n      document.title = \"TextUtils - Blue Mode Enabled\";\n    }\n    if (mode === \"blue\") {\n      setMode(\"light\");\n      document.body.style.background = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light Mode has been Enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode Enabled\";\n    }\n  };\n\n  const greenMode = () => {\n    if (mode !== \"green\") {\n      setMode(\"green\");\n      document.body.style.background = modeColors.green2;\n      document.body.style.color = \"white\";\n      showAlert(\"Green Mode has been Enabled\", \"success\");\n      document.title = \"TextUtils - Green Mode Enabled\";\n    }\n    if (mode === \"green\") {\n      setMode(\"light\");\n      document.body.style.background = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light Mode has been Enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode Enabled\";\n    }\n  };\n\n  const redMode = () => {\n    if (mode !== \"red\") {\n      setMode(\"red\");\n      document.body.style.background = modeColors.red2;\n      document.body.style.color = \"white\";\n      showAlert(\"Red Mode has been Enabled\", \"success\");\n      document.title = \"TextUtils - Red Mode Enabled\";\n    }\n    if (mode === \"red\") {\n      setMode(\"light\");\n      document.body.style.background = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light Mode has been Enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode Enabled\";\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <Navbar\n          title=\"TextUtils\"\n          aboutText=\"About Us\"\n          mode={mode}\n          toggleMode={toggleMode}\n          blueMode={bluetoggleMode}\n          greenMode={greenMode}\n          redMode={redMode}\n          modeColors={modeColors}\n        />\n        <Alert alert1={alert1} mode={mode} />\n        <Routes>\n          <Route\n            exact\n            path=\"/csb-mh8tcp/\"\n            element={\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Try TextUtils, word counter, character counter, case conversion\"\n                mode={mode}\n                modeColors={modeColors}\n              />\n            }\n          />\n          <Route\n            exact\n            path=\"/csb-mh8tcp/about\"\n            element={<About mode={mode} modeColors={modeColors} />}\n          />\n        </Routes>\n      </Router>\n    </>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}