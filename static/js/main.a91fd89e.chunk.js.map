{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","index.js"],"names":["Navbar","props","bgColor","bgColor2","mode","modeColors","dark1","blue1","green1","red1","light1","dark2","blue2","green2","red2","className","style","backgroundColor","to","title","type","id","aboutText","onClick","toggleMode","role","htmlFor","background","color","blueMode","greenMode","redMode","TextForm","useState","text","setText","wordCount","split","filter","element","length","heading","value","onChange","event","target","rows","newtext","toUpperCase","showAlert","toLowerCase","map","arr","charAt","slice","join","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","About","border","borderRadius","marginBottom","Alert","alert1","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","exact","path","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a91fd89e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  var bgColor;\r\n  switch (props.mode) {\r\n    case \"dark\":\r\n      bgColor = props.modeColors.dark1;\r\n      break;\r\n    case \"blue\":\r\n      bgColor = props.modeColors.blue1;\r\n      break;\r\n    case \"green\":\r\n      bgColor = props.modeColors.green1;\r\n      break;\r\n    case \"red\":\r\n      bgColor = props.modeColors.red1;\r\n      break;\r\n    default:\r\n      bgColor = props.modeColors.light1;\r\n      break;\r\n  }\r\n\r\n  var bgColor2;\r\n  switch (props.mode) {\r\n    case \"dark\":\r\n      bgColor2 = props.modeColors.dark2;\r\n      break;\r\n    case \"blue\":\r\n      bgColor2 = props.modeColors.blue2;\r\n      break;\r\n    case \"green\":\r\n      bgColor2 = props.modeColors.green2;\r\n      break;\r\n    case \"red\":\r\n      bgColor2 = props.modeColors.red2;\r\n      break;\r\n    default:\r\n      bgColor2 = \"white\";\r\n      break;\r\n  }\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${\r\n        props.mode === \"light\" ? \"light\" : \"dark\"\r\n      }`}\r\n      style={{ backgroundColor: bgColor }}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/csb-mh8tcp/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                className=\"nav-link active\"\r\n                aria-current=\"page\"\r\n                to=\"/csb-mh8tcp/\"\r\n              >\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/csb-mh8tcp/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {/*<form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form>*/}\r\n        </div>\r\n        <div className=\"form-check form-switch mx-3\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            onClick={props.toggleMode}\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            id=\"flexSwitchCheckDefault\"\r\n          />\r\n          <label\r\n            className={`form-check-label text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n            htmlFor=\"flexSwitchCheckDefault\"\r\n          >\r\n            Enable {props.mode === \"light\" ? \"Dark\" : \"Light\"} Mode\r\n          </label>\r\n        </div>\r\n        <div className=\"dropdown my-2\">\r\n          <div\r\n            className=\"btn btn-secondary dropdown-toggle\"\r\n            role=\"button\"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n            style={{\r\n              background:\r\n                \"linear-gradient(to right, rgb(255, 172, 0), rgb(29, 255, 224), rgb(108, 0, 222))\",\r\n              color: \"black\"\r\n            }}\r\n          >\r\n            <strong>More Color Themes</strong>\r\n          </div>\r\n\r\n          <ul className=\"dropdown-menu\" style={{ backgroundColor: bgColor2 }}>\r\n            <li>\r\n              <div className=\"form-check form-switch mx-3\">\r\n                <input\r\n                  style={{ backgroundColor: \"blue\" }}\r\n                  className=\"form-check-input\"\r\n                  onClick={props.blueMode}\r\n                  type=\"checkbox\"\r\n                  role=\"switch\"\r\n                  id=\"flexSwitchCheckDefault\"\r\n                />\r\n                <label\r\n                  className={`form-check-label text-${\r\n                    props.mode === \"light\" ? \"dark\" : \"light\"\r\n                  }`}\r\n                  htmlFor=\"flexSwitchCheckDefault\"\r\n                >\r\n                  Blue Mode\r\n                </label>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"form-check form-switch mx-3\">\r\n                <input\r\n                  style={{ backgroundColor: \"green\" }}\r\n                  className=\"form-check-input\"\r\n                  onClick={props.greenMode}\r\n                  type=\"checkbox\"\r\n                  role=\"switch\"\r\n                  id=\"flexSwitchCheckDefault\"\r\n                />\r\n                <label\r\n                  className={`form-check-label text-${\r\n                    props.mode === \"light\" ? \"dark\" : \"light\"\r\n                  }`}\r\n                  htmlFor=\"flexSwitchCheckDefault\"\r\n                >\r\n                  Green Mode\r\n                </label>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"form-check form-switch mx-3\">\r\n                <input\r\n                  style={{ backgroundColor: \"red\" }}\r\n                  className=\"form-check-input\"\r\n                  onClick={props.redMode}\r\n                  type=\"checkbox\"\r\n                  role=\"switch\"\r\n                  id=\"flexSwitchCheckDefault\"\r\n                />\r\n                <label\r\n                  className={`form-check-label text-${\r\n                    props.mode === \"light\" ? \"dark\" : \"light\"\r\n                  }`}\r\n                  htmlFor=\"flexSwitchCheckDefault\"\r\n                >\r\n                  Red Mode\r\n                </label>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set your title here\",\r\n  aboutText: \"Set aboutText here\"\r\n};\r\n","import React, {useState} from 'react';\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const HandleUpClick = ()=>{\r\n        //console.log(\"Uppercase was clicked\");\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Convert to Uppercase has been Enabled\", \"success\");\r\n  }\r\n\r\n  const HandleDownClick = ()=>{\r\n    //console.log(\"Uppercase was clicked\");\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext);\r\n    props.showAlert(\"Convert to Lowercase has been Enabled\", \"success\");\r\n  }\r\n\r\n  const HandleCapClick = ()=>{\r\n    //console.log(\"Uppercase was clicked\");\r\n    let newtext = text.toLowerCase().split(' ').map(arr=>arr.charAt(0).toUpperCase() + arr.slice(1)).join(' ');\r\n    setText(newtext);\r\n    props.showAlert(\"Capitalize has been Enabled\", \"success\");\r\n  }\r\n\r\n  const speak = () => {\r\n    let msg = new SpeechSynthesisUtterance();\r\n    msg.text = text;\r\n    window.speechSynthesis.speak(msg);\r\n    props.showAlert(\"Speak has been Enabled\", \"success\");\r\n  }\r\n  \r\n  const HandleOnChange = (event)=>{\r\n    //console.log(\"On Change\")\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  var bgColor;\r\n  switch(props.mode){\r\n    case 'dark': bgColor = props.modeColors.dark2; break;\r\n    case 'blue': bgColor = props.modeColors.blue2; break;\r\n    case 'green': bgColor = props.modeColors.green2; break;\r\n    case 'red': bgColor = props.modeColors.red2; break;\r\n    default: bgColor = 'white'; break;\r\n  }\r\n\r\n  var wordCount = text.split(\" \").filter(element => element.length !== 0).length;\r\n\r\n  return (\r\n    <>\r\n        <div className=\"container my-3\">\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n              <textarea className=\"form-control\" value={text} id=\"myBox\" onChange={HandleOnChange} style={{backgroundColor: bgColor, color: props.mode==='light'?'black':'white'}} rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={HandleUpClick}>Convert to Upper Case</button>  \r\n            <button className=\"btn btn-success mx-1 my-1\" onClick={HandleDownClick}>Convert to Lower Case</button>  \r\n            <button className=\"btn btn-dark mx-1 my-1\" onClick={HandleCapClick}>Capitalize</button>  \r\n            <button className=\"btn btn-warning mx-1 my-1\" onClick={speak}>Speak</button>\r\n        </div>\r\n\r\n        <div className=\"container my-3\">\r\n          <h1>Your Text Summary</h1>\r\n          <p>{wordCount} words and {text.length} characters</p>\r\n          <p>{0.008*wordCount} Minutes Read</p>\r\n          <h2>Preview</h2>\r\n          <p>{wordCount === 0? \"Enter something in the above Textbox to preview it here\":text}</p>\r\n        </div>\r\n    </>\r\n  )\r\n}","import React from \"react\"\r\n\r\nexport default function About(props) {\r\n\r\n  var bgColor2;\r\n    switch(props.mode){\r\n      case 'dark': bgColor2 = props.modeColors.dark2; break;\r\n      case 'blue': bgColor2 = props.modeColors.blue2; break;\r\n      case 'green': bgColor2 = props.modeColors.green2; break;\r\n      case 'red': bgColor2 = props.modeColors.red2; break;\r\n      default: bgColor2 = 'white'; break;\r\n  }\r\n  return (\r\n    <div className=\"container my-3\" style={{border: \"1px solid black\", borderRadius: \"5px\"}}>\r\n        <h1 className=\"my-2\">About Us</h1>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\" style={{backgroundColor: bgColor2}}>\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button  className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Accordion Item #1\r\n                    </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\">\r\n                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\" style={{backgroundColor: bgColor2}}>\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button  className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                        Accordion Item #2\r\n                    </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\">\r\n                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\" style={{backgroundColor: bgColor2, marginBottom: \"10px\"}}>\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Accordion Item #3\r\n                    </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\">\r\n                        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const Capitalize = (text)=>{\r\n        return text.toLowerCase().split(' ').map(arr=>arr.charAt(0).toUpperCase() + arr.slice(1)).join(' ');\r\n      }\r\n\r\n    return (\r\n        props.alert1 && <div>\r\n            <div className={`alert alert-${props.alert1.type} alert-dismissible fade show`} style={{ backgroundColor: props.mode === 'light'? null:'rgb(255, 255, 255, 0.3)', color: props.mode === 'light'? null:'black'}}role=\"alert\">\r\n                <strong>{Capitalize(props.alert1.type)} : </strong>{props.alert1.msg}\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert1, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({ msg: message, type: type });\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const modeColors = {\n    dark1: \"#212529\",\n    dark2: \"#343a40\",\n    light1: \"#f8f9fa\",\n    blue1: \"#22245b\",\n    blue2: \"#383c98\",\n    green1: \"#315b22\",\n    green2: \"#2b7a0f\",\n    red1: \"#5d2121\",\n    red2: \"#8f3434\"\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.background = \"#343a40\";\n      document.body.style.color = \"white\";\n      showAlert(\"Dark Mode has been Enabled\", \"success\");\n      document.title = \"Text Utils - Dark Mode Enabled\";\n      /*setInterval(() => {document.title = \"Text Utils is Amazing\";}, 500); setInterval(() => {document.title = \"Install Text Utils Now\";}, 1000);*/\n    } else {\n      setMode(\"light\");\n      document.body.style.background = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light Mode has been Enabled\", \"success\");\n      document.title = \"Text Utils - Light Mode Enabled\";\n    }\n  };\n\n  const bluetoggleMode = () => {\n    if (mode !== \"blue\") {\n      setMode(\"blue\");\n      document.body.style.background = modeColors.blue2;\n      document.body.style.color = \"white\";\n      showAlert(\"Blue Mode has been Enabled\", \"success\");\n      document.title = \"Text Utils - Blue Mode Enabled\";\n    }\n    if (mode === \"blue\") {\n      setMode(\"light\");\n      document.body.style.background = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light Mode has been Enabled\", \"success\");\n      document.title = \"Text Utils - Light Mode Enabled\";\n    }\n  };\n\n  const greenMode = () => {\n    if (mode !== \"green\") {\n      setMode(\"green\");\n      document.body.style.background = modeColors.green2;\n      document.body.style.color = \"white\";\n      showAlert(\"Green Mode has been Enabled\", \"success\");\n      document.title = \"Text Utils - Green Mode Enabled\";\n    }\n    if (mode === \"green\") {\n      setMode(\"light\");\n      document.body.style.background = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light Mode has been Enabled\", \"success\");\n      document.title = \"Text Utils - Light Mode Enabled\";\n    }\n  };\n\n  const redMode = () => {\n    if (mode !== \"red\") {\n      setMode(\"red\");\n      document.body.style.background = modeColors.red2;\n      document.body.style.color = \"white\";\n      showAlert(\"Red Mode has been Enabled\", \"success\");\n      document.title = \"Text Utils - Red Mode Enabled\";\n    }\n    if (mode === \"red\") {\n      setMode(\"light\");\n      document.body.style.background = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light Mode has been Enabled\", \"success\");\n      document.title = \"Text Utils - Light Mode Enabled\";\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <Navbar\n          title=\"Text Utils\"\n          aboutText=\"About Us\"\n          mode={mode}\n          toggleMode={toggleMode}\n          blueMode={bluetoggleMode}\n          greenMode={greenMode}\n          redMode={redMode}\n          modeColors={modeColors}\n        />\n        <Alert alert1={alert1} mode={mode} />\n        <Routes>\n          <Route\n            exact\n            path=\"/csb-mh8tcp/\"\n            element={\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Enter Your Text Below\"\n                mode={mode}\n                modeColors={modeColors}\n              />\n            }\n          />\n          <Route\n            exact\n            path=\"/csb-mh8tcp/about\"\n            element={<About mode={mode} modeColors={modeColors} />}\n          />\n        </Routes>\n      </Router>\n    </>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}